name: Build USSR

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
    paths-ignore:
      - "**/*.md"
      - "**/*.gitignore"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x', '8.0.x' ]
        dotnet-framework: [ 'net6.0', 'net8.0' ]
        dotnet-runtime: [ 'win-x64', 'win-arm64', 'linux-x64', 'linux-arm64', 'osx-x64', 'osx-arm64' ]

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Install dependencies
      run: dotnet restore
    - name: Build and Test
      run: |
        dotnet build -c Release --no-restore
        dotnet test --logger trx --results-directory ${{ github.workspace }}/TestResults-${{ matrix.dotnet-framework }}-${{ matrix.dotnet-runtime }} --no-restore --verbosity normal
      working-directory: ${{ github.workspace }}
    - name: Publish
      run: dotnet publish -c Release --framework ${{ matrix.dotnet-framework }} --runtime ${{ matrix.dotnet-runtime }} --no-self-contained
      working-directory: ${{ github.workspace }}
    - name: Copy necessary files to every runtime
      run: cp classdata.tpk version.txt ${{ github.workspace }}/bin/Release/${{ matrix.dotnet-framework }}/${{ matrix.dotnet-runtime }}/publish/
      working-directory: ${{ github.workspace }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: USSR-${{ matrix.dotnet-framework }}-${{ matrix.dotnet-runtime }}-latest
        path: ${{ github.workspace }}/bin/Release/${{ matrix.dotnet-framework }}/${{ matrix.dotnet-runtime }}/publish/
